#ifndef HEADER_BIGN_H
#define HEADER_BIGN_H

#include <openssl/opensslconf.h>
#include <openssl/crypto.h>

#ifndef OPENSSL_NO_BIGN
#include <openssl/asn1.h>
#include <openssl/symhacks.h>
#if OPENSSL_API_COMPAT < 0x10100000L
#include <openssl/bn.h>
#endif
//#include <openssl/bignerr.h>
#include <lwocrypt-alg/bign_local.h>
#ifdef __cplusplus
extern "C"
{
#endif


	struct bign_key_st
	{
		EC_GROUP* group;        // Группа эллиптической кривой
		EC_POINT* pub_key;      // Публичный ключ (точка на кривой)
		BIGNUM* priv_key;       // Приватный ключ (большое число)

		CRYPTO_REF_COUNT references;  // Счётчик ссылок
		CRYPTO_EX_DATA ex_data;       // Дополнительные данные
		CRYPTO_RWLOCK* lock;          // Блокировка для потокобезопасности
	};


	
	/* Параметры кривой для bign (пример для 256-битной кривой) */
	/* Структура для хранения параметров кривой bign */
	typedef struct {
		int nid;                /* Идентификатор кривой в OpenSSL (NID) */
		const char* name;       /* Имя кривой (например "id-bign-curve256v1") */
		const char* oid;        /* OID кривой в строковом формате */
		BIGNUM* p;              /* Простое число, определяющее поле GF(p) */
		BIGNUM* a;              /* Коэффициент a уравнения кривой */
		BIGNUM* b;              /* Коэффициент b уравнения кривой */
		BIGNUM* order;          /* Порядок n группы точек кривой */
		BIGNUM* cofactor;       /* Кофактор */
		BIGNUM* x;              /* x-координата базовой точки */
		BIGNUM* y;              /* y-координата базовой точки */
		unsigned char* seed;    /* Seed для генерации параметров */
		size_t seed_len;        /* Длина seed */
	} BIGN_CURVE;



	
	
	
	
	
	
	// vld add ==========================================================================
	/* Инициализация параметров кривой */
	static int bign_curve_init_alg(BIGN_CURVE* curve);


		/* Генерация ключевой пары */
	static int bign_keygen(void* vctx, void* vkey, const OSSL_PARAM params[]);


	//==========================================================================

	/*
		Функция: BIGN_new;
		Описание: Инициализация структуры;
		Параметры:
			curve_name - указатель на массив символов, содержащий имя объектного идентификатора эллиптической кривой:
				bign-curve256v1
				bign-curve384v1
				bign-curve512v1
*/
	BIGN* BIGN_new(const char* curve_name);

	/*
		Функция: BIGN_free;
		Описание: Очистка структуры;
		Параметры:
			bign - указатель на структуру;

*/
	void BIGN_free(BIGN* bign);

	/*
		Функция: BIGN_up_ref;
		Описание: Копирование структуры;
		Параметры:
			bign - указатель на структуру;

*/
	int BIGN_up_ref(BIGN* r);

	/*
	Функция: BIGN_generate_key;
	Описание: СТБ 34.101.45-2013 П 5.4, П 6.2.2 1 Генерация личного ключа на основе случайной последовательности бит;
	Параметры:
		bign - указатель на структуру;
	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	int BIGN_generate_key(BIGN* bign);

	/*
	Функция: BIGN_get_privkey;
	Описание: СТБ 34.101.45-2013. Получение байтов личного ключа;
	Параметры:
		bign - указатель на структуру;
		privkey - указатель на массив байт, куда будет записан личный ключ(результат);
		privkey_len - размер личного ключа;
	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	int BIGN_get_privkey(const BIGN* bign, unsigned char* privkey, unsigned int* privkey_len);

	/*
	Функция: BIGN_get_pubkey;
	Описание: СТБ 34.101.45-2013. Получение байтов открытого ключа;
	Параметры:
		bign - указатель на структуру;
		pubkey - указатель на массив байт, куда будет записан открытый ключ(результат);
		pubkey_len - размер открытого ключа;
	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	int BIGN_get_pubkey(const BIGN* bign, unsigned char* pubkey, unsigned int* pubkey_len);

	/*
	Функция: BIGN_gen_keypair;
	Описание: СТБ 34.101.45-2013 П 6.2.2 Атомарная функция алгоритма генерации пары ключей;
	Параметры:
		bign - указатель на структуру;
		privkey - указатель на массив байт, куда будет записан личный ключ(результат);
		privkey_len - размер личного ключа;
		pubkey - указатель на массив байт, куда будет записан открытый ключ(результат);
		pubkey_len - размер откытого ключа;
	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	int BIGN_gen_keypair(BIGN* bign,
		unsigned char* privkey, unsigned int* privkey_len,
		unsigned char* pubkey, unsigned int* pubkey_len);

	/*
	Функция: BIGN_check_pubkey;
	Описание: СТБ 34.101.45-2013 П 6.2.3 Атомарная функция алгоритма проверки открытого ключа;
	Параметры:
		bign - указатель на структуру;
		pubkey - указатель на массив байт, где находится открытый ключ;
		pubkey_len - размер открытого ключа;
	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	int BIGN_check_pubkey(BIGN* bign, const unsigned char* pubkey, unsigned int pubkey_len);

	/*
	Функция: BIGN_set_privkey;
	Описание: СТБ 34.101.45-2013. Установка личного ключа в структуру;
	Параметры:
		bign - указатель на структуру;
		privkey - указатель на массив байт, где находится личный ключ;
		privkey_len - размер личного ключа;
	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	int BIGN_set_privkey(BIGN* bign, const unsigned char* privkey, unsigned int privkey_len);

	/*
	Функция: BIGN_set_pubkey;
	Описание: СТБ 34.101.45-2013. Установка открытого ключа в структуру;
	Параметры:
		bign - указатель на структуру;
		pubkey - указатель на массив байт, где находится открытый ключ;
		pubkey_len - размер открытого ключа;
	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	int BIGN_set_pubkey(BIGN* bign, const unsigned char* pubkey, unsigned int pubkey_len);

	/*
	Функция: BIGN_oid2der;
	Описание: СТБ 34.101.45-2013 Приложение A. Кодирование идентификаторов объектов;
	Параметры:
		oid - указатель на массив символов, содержащий объектный идентификатор;
		out - указатель на массив байт, куда будет записан кодированный идентификатор;
		outlen - размер выходного массива;
	Коды возврата:
		0x0000 - успех
		0x0001 - объектный идентификатор пустой;
*/
	int BIGN_oid2der(const char* oid, unsigned char* out, unsigned int* outlen);

	/*
	Функция: BIGN_genk;
	Описание: СТБ 34.101.45-2013 П 6.3 Генерация одноразового личного ключа;
	Параметры:
		bign - указатель на структуру;
		md - указатель на массив байт, содержащий хэш-значение;
		md_len - размер хэш-значения;
		oid - указатель на массив байт, содержащий кодированный	объектный идентификатор алгоритма хэширования;
		oid_len - размер кодированного объектного идентификатора;
		t - случайное или псевдослучайное значение. Может использоваться фиксированное значение. По умолчаю предполагается пустым словом;
		t_len - размер массива байт, содержащий параметр t, в байтах;
		key - указатель на массив байт, куда будет записан одноразовый личный ключ(результат);
	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	int BIGN_genk(
		BIGN* bign,
		const unsigned char* md, unsigned int md_len,
		const unsigned char* oid, unsigned int oid_len,
		const unsigned char* t, size_t t_len,
		unsigned char* key);
	//=============================================================================================================================================
	/*
	Функция: BIGN_sign;
	Описание: СТБ 34.101.45-2013 П 7.1.3 Алгоритм выработки электронной цифровой подписи;
	Параметры:
		bign - указатель на структуру;
		md - указатель на массив байт, содержащий хэш-значение;
		md_len - размер хэш-значения;
		oid - указатель на массив байт, содержащий кодированный	объектный идентификатор алгоритма хэширования;
		oid_len - размер кодированного объектного идентификатора;
		t - указатель на массив байт, содержащий случайные данные. Может использоваться фиксированное значение или пустое слово;
		t_len - размер случайных данных;
		sign - указатель на массив байт, куда будет записана подпись(результат);
		sign_len - будет записан размер подписи(результат)

	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	int BIGN_sign(
		BIGN* bign,
		const unsigned char* md, unsigned int md_len,
		const unsigned char* oid, unsigned int oid_len,
		const unsigned char* t, size_t t_len,
		unsigned char* sign, unsigned int* sign_len);

	/*
	Функция: BIGN_verify;
	Описание: СТБ 34.101.45-2013 П 7.1.4. Алгоритм проверки электронной цифровой подписи;
	Параметры:
		bign - указатель на структуру;
		sign - указатель на массив байт, содержащих подпись, которую необходимо проверить;
		sign_len - размер подписи;
		md - укзатель на массив байт, содержащий хэш значение данных, чью подпись мы проверяем;
		md_len - размер хэш-значения;
		oid - указатель на массив байт, содержащий кодированный объектный идентификатор;
		oid_len - размер кодированного объектного идентификатора;
	Коды возврата:
		0x0000 - успех
		0x0001 - внутренняя ошибка
		0x0002 - неверная подпись
*/
	int BIGN_verify(
		BIGN* bign,
		const unsigned char* sign, unsigned int sign_len,
		const unsigned char* md, unsigned int md_len,
		const unsigned char* oid, unsigned int oid_len);

	//=======================================================================================================================================
	/*
	Функция: BIGN_create_token;
	Описание: СТБ 34.101.45-2013 П 7.2.3 Алгоритм создания токена ключа;
	Параметры:
		bign - указатель на структуру;
		transport_key - указатель на массив байт, содержащий транспортируемый ключ;
		transport_key_len - размер транспортируемого ключа в байтах;
		header - указатель на массив байт, содержащий заголовок;
		out - указатель на массив байт, куда будет записано результирующее значение;
		out_len - размер массива, куда будет записано результирующее значение, в байтах;

	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	unsigned int BIGN_create_token(
		BIGN* bign,
		const unsigned char* transport_key, size_t transport_key_len,
		const unsigned char header[16],
		unsigned char* out, size_t* out_len);

	/*
	Функция: BIGN_decode_token;
	Описание: СТБ 34.101.45-2013 П 7.2.4 Алгоритм разбора токена ключа. Разбор токена ключа;
	Параметры:
		bign - указатель на структуру;
		token - токен ключа;
		token_len - размер токена ключа в байтах;
		header - указатель на массив байт, содержащий заголовок;
		out - указатель на массив байт, куда будет записано результирующее значение;
		out_len - размер массива, куда будет записано результирующее значение, в байтах;
	Коды возврата:
		0x0000 - успех
		0x0001 - внутренняя ошибка
		0x0002 - ошибка разбора токена
*/
	unsigned int BIGN_decode_token(
		BIGN* bign,
		const unsigned char* token, size_t token_len,
		const unsigned char header[16],
		unsigned char* out, size_t* out_len);
	//===============================================================================================================================
	/*
	Функция: BIGN_build_key_on_password;
	Описание: СТБ 34.101.45-2013 Приложение Е.2.3 Алгоритм построения ключа защиты по паролю;
	Параметры:
		pass - указатель на массив байт, содержащий пароль защиты;
		pass_len - размер пароля защиты в байтах;
		c - количество итераций;
		iv - указатель на массив байт, содержащий синхропосылку;
		iv_len - размер синхропосылки в байтах;
		theta - указатель на массив байт, куда будет записан результат;
*/
	void BIGN_build_key_on_password(const unsigned char* pass, size_t pass_len,
		const unsigned int c, const unsigned char* iv, size_t iv_len,
		unsigned char theta[32]);

	/*
	Функция: BIGN_password_protect;
	Описание: СТБ 34.101.45-2013 Е.3 Алгоритмы защиты личного ключа. Установка парольной защиты на ключ;
	Параметры:
		pass - указатель на массив байт, содержащий пароль;
		pass_len - размер пароля в байтах;
		iv - указатель на массив байт, содержащий синхропосылку;
		iv_len - размер синхропосылки в байтах;
		key - указатель на массив байт, содержащий ключ, который необходимо защитить;
		key_len - размер ключа в байтах;
		header - указатель на массив байт, содержащий заголовок;
		c - количество итераций;
		out - указатель на массив байт, куда будет записано результирующее значение;
		out_len - размер массива, куда будет записано результирующее значение, в байтах;

	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	int BIGN_password_protect(
		const unsigned char* pass, size_t pass_len,
		const unsigned char* iv, size_t iv_len,
		const unsigned char* key, size_t key_len,
		const unsigned char header[16],
		unsigned int c,
		unsigned char* out, size_t* out_len);
	/*
	Функция: BIGN_password_unprotect;
	Описание: СТБ 34.101.45-2013 Е.3 Алгоритмы защиты личного ключа. Снятие парольной защиты с ключа;
	Параметры:
		pass - указатель на массив байт, содержащий пароль;
		pass_len - размер пароля в байтах;
		iv - указатель на массив байт, содержащий синхропосылку;
		iv_len - указатель на массив байт, содержащий длину синхропосылки в байтах;
		protected_key - указатель на массив байт, содержащий ключ, с которого необходимо снять защиту;
		protected_key_len - размер ключа, с которого снимается защита, в байтах;
		header - указатель на массив байт, содержащий заголовок;
		c - количество итераций;
		out - указатель на массив байт, куда будет записано результирующее значение;
		out_len - размер массива, куда будет записано результирующее значение, в байтах;

	Коды возврата:
		0x0000 - успех
		0x0001 - ошибка
*/
	int BIGN_password_unprotect(
		const unsigned char* pass, size_t pass_len,
		const unsigned char* iv, size_t iv_len,
		const unsigned char* protected_key, size_t protected_key_len,
		const unsigned char header[16],
		unsigned int c,
		unsigned char* out, size_t* out_len);

#ifdef __cplusplus
}
#endif
#endif

#endif